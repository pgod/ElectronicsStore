<?xml version="1.0" encoding="UTF-8"?>
<flow xmlns="http://www.springframework.org/schema/webflow"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://www.springframework.org/schema/webflow 
  http://www.springframework.org/schema/webflow/spring-webflow-2.0.xsd">

	<var name="order" class="godziszewski.patryk.ElectronicsStore.model.Order" />
	
	<action-state id="addCartToOrder">
		<secured attributes="ROLE_USER" />
		<evaluate expression="cartServiceImpl.validate(requestParameters.cartId)"
			result="order.cart" />
		<transition to="InvalidCartWarning"
			on-exception="godziszewski.patryk.ElectronicsStore.exception.InvalidCartException" />
		<transition to="checkQuantity" />
	</action-state>
	
	<action-state id="checkQuantity">
		<evaluate expression="orderServiceImpl.checkQuantity(order)" />
		<transition to="NotEnoughProductsInStock"
		on-exception="java.lang.IllegalArgumentException" />
		<transition to="loadCustomerAddress" />	
	</action-state>
	
	<action-state id="loadCustomerAddress">
		<evaluate expression="customerServiceImpl.getCustomerByEmail(currentUser.name)"
			result="order.customer" />
		<transition to="customer"
			on-exception="org.springframework.expression.spel.SpelEvaluationException"/>
		<transition to="customer" />	
	</action-state>
	
	<subflow-state id="customer" subflow="checkout/customer">
      <input name="order" value="order"/>
      <transition on="customerReady" to="updateCustomerAddress" />
    </subflow-state>

	<action-state id="updateCustomerAddress">
		<evaluate expression="customerServiceImpl.updateAddressDetails(order.customer)" />
		<transition to="orderConfirmation" />	
	</action-state>

	<view-state id="orderConfirmation">
		<transition on="orderConfirmed" to="saveOrder" />
		<transition on="backToCustomerInfo" to="customer" />
	</view-state>
	
	<action-state id="saveOrder">
		<evaluate expression="orderServiceImpl.saveOrder(order)" />
		<transition to="sendEmailConfirmation" />
	</action-state>
	
	<view-state id="InvalidCartWarning">
		<transition to="endState"/>
	</view-state>
	
	<view-state id="NotEnoughProductsInStock">
		<transition to="endState"/>
	</view-state>
	
	
	<action-state id="sendEmailConfirmation">
		<evaluate expression="mailServiceImpl.sendEmail(order)" />
		<transition to="thankCustomer" />
	</action-state>
	
	<view-state id="thankCustomer" model="order">
		<transition to="endState"/>
	</view-state>

	<end-state id="endState"/>	

	<end-state id="cancelCheckout" view = "checkOutCancelled.jsp"/>		
	
	<global-transitions>
		<transition on = "cancel" to="cancelCheckout" />
	</global-transitions>
	
</flow>
